<mxfile host="www.draw.io" modified="2020-02-12T03:58:57.318Z" agent="Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36" etag="uRlUKtIhfPXbzvl7p3jM" version="12.6.7" type="github">
  <diagram id="qh0Lq1xBN505Rn_b88Kx" name="Page-1">
    <mxGraphModel dx="1319" dy="716" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0"/>
        <mxCell id="1" parent="0"/>
        <mxCell id="mFfEqbzUxQ6ckqT6lnFx-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;strokeWidth=1;" parent="1" source="mFfEqbzUxQ6ckqT6lnFx-1" target="mFfEqbzUxQ6ckqT6lnFx-4" edge="1">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="mFfEqbzUxQ6ckqT6lnFx-1" value="dlib人脸检测" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" parent="1" vertex="1">
          <mxGeometry x="20" y="260" width="120" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=1;" edge="1" parent="1" source="mFfEqbzUxQ6ckqT6lnFx-4" target="9HCvw9ng1HeitRacN_Zp-1">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="mFfEqbzUxQ6ckqT6lnFx-4" value="&lt;span style=&quot;color: rgb(77 , 77 , 77) ; font-family: &amp;#34;microsoft yahei&amp;#34; , &amp;#34;sf pro display&amp;#34; , &amp;#34;roboto&amp;#34; , &amp;#34;noto&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;pingfang sc&amp;#34; , sans-serif ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;frontal_face_detection.h&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" parent="1" vertex="1">
          <mxGeometry x="230" y="260" width="210" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="mFfEqbzUxQ6ckqT6lnFx-7" value="&lt;div&gt;&lt;span&gt;人脸检测主程序&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; inline frontal_face_detector get_frontal_face_detector()&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::istringstream sin(get_serialized_frontal_faces());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; frontal_face_detector detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deserialize(detector, sin);&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;align=left;strokeWidth=1;" parent="1" vertex="1">
          <mxGeometry x="220" y="340" width="340" height="200" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;strokeWidth=1;" edge="1" parent="1" source="9HCvw9ng1HeitRacN_Zp-1" target="9HCvw9ng1HeitRacN_Zp-4">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-1" value="&lt;pre&gt;&lt;span style=&quot;color: rgb(77 , 77 , 77) ; font-family: &amp;#34;microsoft yahei&amp;#34; , &amp;#34;sf pro display&amp;#34; , &amp;#34;roboto&amp;#34; , &amp;#34;noto&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;pingfang sc&amp;#34; , sans-serif ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;object_detector.h&amp;nbsp;&lt;/span&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="610" y="260" width="170" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-3" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;typedef object_detector&amp;lt;scan_fhog_pyramid&amp;lt;pyramid_down&amp;lt;6&amp;gt; &amp;gt; &amp;gt; frontal_face_detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline const std::string get_serialized_frontal_faces();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //获取已经训练好的模型，是字符串形式，deserialize后得到模型文件&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline frontal_face_detector get_frontal_face_detector()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::istringstream sin(get_serialized_frontal_faces());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; frontal_face_detector detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deserialize(detector, sin);&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;align=left;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="620" y="340" width="340" height="200" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;strokeWidth=1;" edge="1" parent="1" source="9HCvw9ng1HeitRacN_Zp-4" target="9HCvw9ng1HeitRacN_Zp-7">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-4" value="&lt;pre&gt;&lt;span style=&quot;color: rgb(77 , 77 , 77) ; font-family: &amp;#34;microsoft yahei&amp;#34; , &amp;#34;sf pro display&amp;#34; , &amp;#34;roboto&amp;#34; , &amp;#34;noto&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;pingfang sc&amp;#34; , sans-serif ; font-size: 16px ; white-space: normal ; background-color: rgb(255 , 255 , 255)&quot;&gt;scan_fhog_pyramid.h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="1090" y="260" width="170" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-6" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;typedef object_detector&amp;lt;scan_fhog_pyramid&amp;lt;pyramid_down&amp;lt;6&amp;gt; &amp;gt; &amp;gt; frontal_face_detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline const std::string get_serialized_frontal_faces();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //获取已经训练好的模型，是字符串形式，deserialize后得到模型文件&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline frontal_face_detector get_frontal_face_detector()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::istringstream sin(get_serialized_frontal_faces());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; frontal_face_detector detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deserialize(detector, sin);&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;align=left;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="990" y="350" width="340" height="200" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-7" value="&lt;pre&gt;&lt;span style=&quot;color: rgb(77 , 77 , 77) ; font-family: &amp;#34;microsoft yahei&amp;#34; , &amp;#34;sf pro display&amp;#34; , &amp;#34;roboto&amp;#34; , &amp;#34;noto&amp;#34; , &amp;#34;arial&amp;#34; , &amp;#34;pingfang sc&amp;#34; , sans-serif ; font-size: 16px ; white-space: normal ; background-color: rgb(255 , 255 , 255)&quot;&gt;box_overlap_testing.h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="1450" y="260" width="170" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-9" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;typedef object_detector&amp;lt;scan_fhog_pyramid&amp;lt;pyramid_down&amp;lt;6&amp;gt; &amp;gt; &amp;gt; frontal_face_detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline const std::string get_serialized_frontal_faces();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //获取已经训练好的模型，是字符串形式，deserialize后得到模型文件&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; inline frontal_face_detector get_frontal_face_detector()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::istringstream sin(get_serialized_frontal_faces());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; frontal_face_detector detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deserialize(detector, sin);&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return detector;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;align=left;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="1400" y="350" width="340" height="200" as="geometry"/>
        </mxCell>
        <mxCell id="9HCvw9ng1HeitRacN_Zp-10" value="&lt;pre&gt;&lt;font color=&quot;#4d4d4d&quot; face=&quot;microsoft yahei, sf pro display, roboto, noto, arial, pingfang sc, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px ; white-space: normal&quot;&gt;fhog.h&lt;/span&gt;&lt;/font&gt;&lt;br&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=1;" vertex="1" parent="1">
          <mxGeometry x="1820" y="260" width="170" height="60" as="geometry"/>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
